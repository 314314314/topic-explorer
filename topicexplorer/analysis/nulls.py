import logging
import pickle
from typing import Iterable

import numpy as np
from vsm.viewer.ldacgsviewer import LdaCgsViewer

from topicexplorer import TopicExplorer
import topicexplorer.analysis

def text_to_text(te: TopicExplorer, k: int, ids: Iterable[str]=None,
                 nulls_ids: Iterable[Iterable[str]]=None) -> np.array:
    if ids is None:
        ids = te.corpus.ids
    v = te[k]

    idxs = [te.corpus.ids.index(id) for id in ids]
    logging.debug("Building topic matrix")
    tops = v.doc_topic_matrix(te.corpus.ids)

    logging.debug("Generating t2t and null_t2t")
    t2t = topicexplorer.analysis.text_to_text(tops[idxs])
    if nulls_ids:
        nulls_idx = [[te.corpus.ids.index(id) for id in null_ids] for null_ids in nulls_ids]
        null_t2t = np.array([topicexplorer.analysis.text_to_text(tops[null_idx]) for null_idx in nulls_idx])
        null_t2t = null_t2t.sum(axis=0) / len(null_t2t)

        return t2t - null_t2t

    else:
        return t2t

def past_to_text(te: TopicExplorer, k: int, ids: Iterable[str]=None,
                 nulls_ids: Iterable[Iterable[str]]=None) -> np.array:
    if ids is None:
        ids = te.corpus.ids

    logging.debug("Building topic matrix")
    tops = te[k].doc_topic_matrix(te.corpus.ids)
    idxs = [te.corpus.ids.index(id) for id in ids]

    logging.debug("Generating p2t and null_p2t")
    p2t = topicexplorer.analysis.past_to_text(tops[idxs])
    if nulls_ids:
        nulls_idx = [[te.corpus.ids.index(id) for id in null_ids] for null_ids in nulls_ids]
        null_p2t = np.array([topicexplorer.analysis.past_to_text(tops[null_idx]) for null_idx in nulls_idx])
        null_p2t = null_p2t.sum(axis=0) / len(null_p2t)

        return p2t - null_p2t

    else:
        return p2t

def load_null(filename: str):
    with open(filename, 'rb') as nullfile:
        null_ids = pickle.load(nullfile)
    
    return null_ids

if __name__ == '__main__':
    from argparse import ArgumentParser
    parser = ArgumentParser()
    parser.add_argument('config_file')
    parser.add_argument('null_file')
    parser.add_argument('-k', type=int)
    args = parser.parse_args()

    import topicexplorer
    te = topicexplorer.from_config(args.config_file)
    ids =  ['IA627', '001448853', '012481028', '011693518', '100153138', '007701232', '001858001', '009724697', '007689516', '011724840', '009777087', '002015586', '010822931', '001490783', '008641221', '001876478', '006520146', '009719173', '011603167', 'IA629', '009777341', 'IA631', '008622596', '001038530', '008642218', '008593438', '008956176', '003348819', '008908968', '002236866', '002139824', '008910955', '007683582', '008974540', '001254780', '009043160', '009711046', '008686633', '001518695', '008847594', '009712465', '002002835', '005942714', 'IA635', 'IA634', '006292543', '008599729', '009027168', '010944097', '007681312', '007374335', '007666383', '007652212', '001809553', '008693127', '100220354', '008584199', '008899991', '011257470', '002639745', '001285822', '100263834', '007691234', '008642667', '001878778', '001391807', 'IA638', '001999361', '009042950', '009722504', '001112820', 'IA715', '008684385', '009728866', 'Moore', '008668758', '008642058', '001249739', '001587643', '010599900', '008622214', 'IA650', '001998152', '008587634', '007684504', '009974989', '000165432', '001039190', '001285952', '006057684', '007655559', '008596503', '008727903', '009711392', '100153145', '008425018', '001505841', '008652787', '007692575', '001493564', '001693614', '000874920', '001939230', '006511948', '009788339', '009710413', '006539150', 'IA711', 'IA642', '001240678', '005968002', '001495614', 'IA647', 'IA648', '100277899', '008688503', '001235166', '008395260', 'IA645', '009713852', '008641152', '010321750', '008687037', '009706483', 'IA643', 'IA646', '009777269', '008628606', '006637122', '008223364', '007681484', '009710617', '001603221', '009735683', '007685799', '000772719', '005721276', '001423413', '007681912', '010414438', '001997613', '009710294', '001271790', '001901942', '000638634', '007960862', '011547881', '001518583', '001915361', '001240735', '010518716', '001915603', 'IA651', '011212366', '008596064', '100217596', '010824543', '001249744', '008395099', '008601628', '006105655', '007670104', '002007179', '011359562', '009729370', '007968676', '001497929', 'IA661', '008599654', '000330313', 'IA703', '001693759', '009731453', '007691251', '001504802', '001260657', '001250717', '008630885', '008726266', '008598823', '008643845', '008652063', '008223542', '008643638', '001022317', '009017670', '001998595', '009710008', '008613676', '006251427', '008631191', '008642519', '009713111', '008690661', 'IA704', '008560210', '011679509', '008595201', '000587795', '001192863', '008617369', '006587813', '000292189', '001473225', '008621853', '011530999', '008596560', '009597566', '009675719', '008688081', '010668681', '002882149', '008622078', '011610918', '001270907', '008917603', '007699081', '008585163', '000165435', '001799083', '002603878', '001116605', '006577250', '001418827', '008587699', '008644360', '008668404', '011453267', '011563622', '011564526', '008687698', '006736518', '008601364', '001254776', '009589370', '008730047', '008644330', '001236166', '001895119', '001271761', '010668645', '008649004', '009726799', '002015592', 'IA662', '007690083', '008617303', '009013822', '009712178', '008613367', '008641722', '008929834', '001499279', '012305762', '009981177', '002006664', '000907089', '006515803', '008586706', '001235938', '008686916', '002600042', '006659042', '008684084', '006131989', 'IA665', 'IA664', '009735708', 'IA717', '004394830', '008630604', '007316743', '011601739', '009729380', '006558851', '001498968', '008596394', '001235852', '008888067', '008399927', '001018934', '008596319', '001253445', '008970847', '007701733', '009734495', '001255782', 'IA666', '011556327', 'IA719', 'IA667', '100029958', '009738086', '000290323', '009796810', '005770877', '001271553', '012312855', '007658026', '009733232', 'IA668', '001464183', 'IA669', '009729301', '009736020', '001452730', '001498576', 'IA670', '008644875', '008641916', '008927342', '008642778', '001495837', '006303342', '002025009', '011531147', '008593457', '007690082', '001236082', '008593638', '007687104', '001492495', '001490043', '001265470', 'IA716', '006049661', '000311648', '006852504', '011564887', '001493380', '006130449', '009775572', '000566752', '011547165', '008224378', '001493947', '007699764', '001383874', '001978590', '009260455', '001785565', '011617155', '005751422', '001875529', '001501026', '007681237', '006687034', '006173735', '001494535', '011530311', '001496677', 'IA674', '006624894', '000271103', '001465401', '008641706', 'IA675', '001261011', '009714342', '011214246', '001248053', '008599647', '011544404', '009113433', '007938416', '008601197', '000374603', '001871371', '000107979', '001308553', '001997271', '001495758', '006292728', '009260120', '011640011', '000289873', '008585450', '008604717', '008586210', '006148917', 'IA705', '002001176', 'IA708', '009549476', '008409093', 'IA678', '007351771', '006535766', 'IA679', '009590389', '009731471', '008637455', '001256013', '008917346', '009239487', '009796368', '005802542', '006292516', '000472394', '009706442', '009724001', '008630146', '100072567', '007486680', '007687801', '006512780', '001285988', '000200766', '005062723', '001502048', '001235171', '008883812', '006072401', '000372699', '001350912', '001235181', '008617343', '000536436', '011565194', '008599475', '008642295', '008882405', '001487533', '007652903', '001499133', '008394918', '008888732', '009001174', '006726272', '011408468', '001610897', '000292175', '001498707', '001234383', '001135595', '011600913', 'IA682', '001491599', '000371875', '006573025', '000108322', '005942643', '011812419', '003459804', '000911311', '009262544', '001444502', '009779724', '001251286', '001863165', '008891069', '001999956', '008910622', '008645159', '006582089', 'IA712', '000413871', '006285392', 'IA684', '007701333', '008684239', '008885950', '005772228', '007655987', '011560885', '008626523', 'IA700', '001516980', '007706655', '011985976', '007694326', '010053714', '009013563', '008638671', '003931643', '011929225', '001942405', '011567416', '008642002', '007689988', '008719499', '006531198', 'IA710', '001490665', '008639037', '012314475', '009733988', '007699493', '001389004', 'IA714', '008683335', '006732368', '000370212', '007924275', '009713139', '009260594', '011207365', '001315340', '011639828', '006577130', '012241623', '008397195', '009015081', '001257952', '008686799', '011531960', '001490039', '001255791', '011632191', '008594300', '001499837', '007705692', '008687168', '000237194', '005821341', '011530289', '010165274', '008686604', '010668953', '001186040', '006678483', '008594206', '001973399', '007073700', '009027155', '000120647', '001253669', '008687750', '008559970', '001271587', '007119613', '001493750', '007123177', '008977326', '005891849', '008427860', '007703586', '011627390', '011259639', '001988056', '008599765', '008642109', '011542380', '005792465', '000372104', '009026995', '008637315', '011561066', '008586070', '001499991', '011679631', '009733144', 'IA685', 'IA709', '008403702', '011621934', '008727402', '001500641', '012503783', '008640061', '011636010', '006910565', '006516230', '007374641', '008591450', '009073704', '001518627', '008593596', 'IA713', '001499508', '007681849', '007652562', '011617672', '008641963', '005820885', '008613547', '008650702', '008644918', '007702009', '001474671', '007699942', '001511790', '001604683', 'IA686', '008675950', 'IA687', '001501377', 'IA688', '009281774', 'IA702', '001602525', '008969834', '001501823', '009709116', '001499531', '006614112', '001500522', 'IA689', '001274335', '002012729', '006293734', '009668759', '009013823', '009808369', '008586300', '006133208', '001473961', '011604468', '011665361', '000272057', '008588543', '000602990', '000326943', '001266528', '007707278', 'IA707', '005818970', '008668680', '009778425', '009831980', '011531445', '009610011', '002015254', '011604157', '008598539', '002086571', '001500520', '002000493', '001263354', '001605641', '011538483', '009561259', '006065442', '009734045', 'IA718', '100303435', '011213435', 'IA706', '002010685', '002007530', '009033968', 'IA701', '011542539', '006084660', '001271603', '006574680', '011558451']
    te.corpus._corpus.context_data[0] = te.corpus._corpus.context_data[0].astype([('idx', '<i4'), ('book_label', 'U9')])
    te.corpus.ids = te.corpus._corpus.context_data[0]['book_label'].tolist()
    te[args.k].model.context_type = 'book'


    print(te.corpus.ids)
    nulls_ids = load_null(args.null_file)
    t2t = text_to_text(te, args.k, ids, nulls_ids=nulls_ids)
    p2t = past_to_text(te, args.k, ids, nulls_ids=nulls_ids)

    import pylab
    pylab.plot(np.cumsum(t2t), label='text-to-text')
    pylab.plot(np.cumsum(p2t), label='past-to-text')
    pylab.legend()
    pylab.show()
